{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,WAGA,IAAMC,EAAOC,SAASC,cAAc,SAiBpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,GACFF,EAAQ,CAAEH,WAAUC,UAEtBG,EAAO,CAAEJ,WAAUC,S,GAClBA,E,IAIP,SAASQ,EAAUC,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MAC7BU,EAAAjB,GAASkB,OAAOC,QAAQ,uBAAwCC,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,CAGxE,SAASc,EAAQL,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MAC3BU,EAAAjB,GAASkB,OAAOI,QAAQ,sBAAqCF,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,CAjCrEL,EAAKqB,iBAAiB,UAEtB,SAAoBC,GAClBA,EAAMC,iBAEN,IAAgCC,EA+BlC,SAAuBV,G,IAAET,EAAFS,EAAET,MAAOoB,EAATX,EAASW,KAAMC,EAAfZ,EAAeY,OACpC,MAAO,CACLrB,MAAOsB,OAAOtB,EAAMuB,OACpBH,KAAME,OAAOF,EAAKG,OAClBF,OAAQC,OAAOD,EAAOE,O,CAnCQC,CAAc7B,EAAK8B,UAA3CzB,EAAwBmB,EAAxBnB,MAAOoB,EAAiBD,EAAjBC,KAAMC,EAAWF,EAAXE,OACjBK,EAAgB1B,EACpBL,EAAKgC,QAEL,IAAK,IAAI5B,EAAW,EAAGA,GAAYsB,EAAQtB,GAAY,EACrDD,EAAcC,EAAU2B,GAAeE,KAAKpB,GAAWqB,MAAMf,GAC7DY,GAAiBN,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-aio-3.2.6.min.js';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', submitForm);\n\nfunction submitForm(event) {\n  event.preventDefault();\n\n  const { delay, step, amount } = valueToNumber(form.elements);\n  let delayWithStep = delay;\n  form.reset();\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delayWithStep).then(onSuccess).catch(onError);\n    delayWithStep += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n      reject({ position, delay });\n    }, delay);\n  });\n}\n\nfunction onSuccess({ position, delay }) {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction onError({ position, delay }) {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n\nfunction valueToNumber({ delay, step, amount }) {\n  return {\n    delay: Number(delay.value),\n    step: Number(step.value),\n    amount: Number(amount.value),\n  };\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$onSuccess","param","$parcel$interopDefault","Notify","success","concat","$ce04d3a99e08e73b$var$onError","failure","addEventListener","event","preventDefault","ref","step","amount","Number","value","$ce04d3a99e08e73b$var$valueToNumber","elements","delayWithStep","reset","then","catch"],"version":3,"file":"03-promises.67d01cd4.js.map"}